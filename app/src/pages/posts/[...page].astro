---
export const prerender = true

import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";

import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import PageLayout from "@/layouts/Base.astro";
import { getAllPosts, getUniqueTags, sortMDByDate } from "@/utils";

export const getStaticPaths = (async ({ paginate }) => {
	const allPosts = await getAllPosts();
	const allPostsByDate = sortMDByDate(allPosts);
	const uniqueTags = getUniqueTags(allPosts);
	return paginate(allPostsByDate, { pageSize: 10, props: { uniqueTags } });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"post">>;
	uniqueTags: string[];
}

const { page } = Astro.props;

const meta = {
	description: "Cosas que me apetece compartir",
	title: "Posts",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: `← Previous Posts`,
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: `Next Posts →`,
			url: page.url.next,
		},
	}),
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6">Posts</h1>
	<div class="grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8">
		<section aria-label="Blog post list">
			<ul class="space-y-8 text-start">
				{
					page.data.map((p) => (
						<li class="flex flex-col flex-wrap gap-2 sm:flex-row [&_q]:basis-full">
							<PostPreview as="h2" post={p} withDesc />
						</li>
					))
				}
			</ul>
			<Pagination {...paginationProps} />
		</section>
	</div>
</PageLayout>
